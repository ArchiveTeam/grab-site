on:
    pull_request:
        paths:
            - "Dockerfile"

    push:
        paths:
            - "Dockerfile"

    workflow_dispatch:

env:
    registry: ghcr.io
    username: ${{ github.actor }}
    password: ${{ github.token }}

jobs:
    deploy:
        runs-on: ubuntu-latest

        env:
            context: .
            file: Dockerfile
            image: grab-site

        permissions:
            contents: read
            id-token: write
            packages: write

        steps:
            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: |
                      ${{ env.registry }}/${{ env.username }}/${{ env.image }}
                  tags: |
                      type=raw,value=latest,enable={{is_default_branch}}
                      type=ref,event=branch
                      type=ref,event=pr
                      type=ref,event=tag
                      type=schedule,pattern=nightly
                      type=semver,pattern={{major}}
                      type=semver,pattern={{major}}.{{minor}
                      type=semver,pattern={{version}}
                      type=sha,format=long

            - name: Setup QEMU
              uses: docker/setup-qemu-action@v2

            - name: Setup Docker Buildx
              id: builder
              uses: docker/setup-buildx-action@v2

            - name: Log into registry ${{ env.registry }}
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.registry }}
                  username: ${{ env.username }}
                  password: ${{ env.password }}

            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: Build ${{ env.image }} image
              id: build
              uses: docker/build-push-action@v4
              with:
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  context: ${{ env.context }}
                  file: ${{ env.context }}/${{ env.file }}
                  labels: ${{ steps.meta.outputs.labels }}
                  platforms: linux/amd64
                  provenance: false
                  push: ${{ github.event != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}

            - name: Install Cosign
              if: github.event_name != 'pull_request'
              uses: sigstore/cosign-installer@main

            - name: Sign the Docker images
              if: github.event_name != 'pull_request'
              run: |
                  echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes \
                    -a "ref=${{ github.sha }}" \
                    -a "repo=${{ github.repository }}" \
                    -a "workflow=${{ github.workflow }}" \
                    "{}@${{ steps.build.outputs.digest }}"
